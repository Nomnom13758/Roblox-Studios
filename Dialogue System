(Local set in GUI)

-- GUI 
local DialogueGUI = script.Parent.Parent.Parent
local GuiFrame = DialogueGUI["Text Box"]
local TextFrame = script.Parent
local ResponseButton1 = GuiFrame.Response1
local ResponseButton2 = GuiFrame.Response2
local replicatedStorage = game:GetService("ReplicatedStorage")
local EventLog = replicatedStorage.Events.TestDialogue

-- Sounds/Music
local DefaultMusic = DialogueGUI["Sounds/Music"].BackgroundMusic
local DefaultSound = DialogueGUI["Sounds/Music"].TypingSound
local PlayingMusic = false

-- variables
local Typing = false
local Dialogue = false
local StartMessage = 1 

-- other 
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:FindFirstChildOfClass("Humanoid")

-- Message and Response table
local Messages = {
	[1] = "Hello World",
	[2] = "...",
	[3] = "Goodbye!",
	[4] = nil
}

local response1 = {
	[1] = {Text = "Hello!", Next = 2},
	[2] = {Text = "End", Next = nil},
	[3] = {Text = "End", Next = nil},
	[4] = nil
}

local response2 = {
	[1] = {Text = "Goodbye!", Next = 3},
	[2] = {Text = "End", Next = nil},
	[3] = {Text = "End", Next = nil},
	[4] = nil
}

-- Messaging/Writing script
local function TextInput(messageIndex)
	local message = Messages[messageIndex]
	local resp1 = response1[messageIndex]
	local resp2 = response2[messageIndex]

	-- Check for messages
	if message == nil or resp1 == nil or resp2 == nil then
		DialogueGUI.Enabled = false
		Typing = false
		Dialogue = false
		StartMessage = 1
		DefaultMusic:Stop()
		PlayingMusic = false
		EventLog:FireServer()
		return
	end

	DialogueGUI.Enabled = true 
	Dialogue = true 
	Typing = true 

	TextFrame.Text = ""
	ResponseButton1.Text = resp1.Text or ""
	ResponseButton2.Text = resp2.Text or ""

	-- Typing effect on the GUI
	for i, v in message:split("") do
		TextFrame.Text = TextFrame.Text..v
		DefaultSound:Play()
		wait(0.06)
	end
	Typing = false
end

EventLog.OnClientEvent:Connect(function()
	if Typing == true then return end
	StartMessage = 1
	TextInput(StartMessage)
	if PlayingMusic == true then 
		return
	else 
		DefaultMusic:Play()
		PlayingMusic = true 
	end
end)

ResponseButton1.MouseButton1Up:Connect(function()
	if Typing == true then return end
	if Dialogue == false then return end
	local resp = response1[StartMessage]
	if resp and resp.Next then
		StartMessage = resp.Next
		TextInput(StartMessage)
	else
		TextInput(nil)
	end
end)

ResponseButton2.MouseButton1Up:Connect(function()
	if Typing == true then return end
	if Dialogue == false then return end 
	local resp = response2[StartMessage]
	if resp and resp.Next then
		StartMessage = resp.Next
		TextInput(StartMessage)
	else
		TextInput(nil)
	end
end)

(ServerSide set in NPC)


local ReplicatedStorage = game:GetService("ReplicatedStorage")
local DialogueEvent = ReplicatedStorage.Events.TestDialogue
local ProxPrompt = script.Parent

-- Variables to store current humanoid and connection
local invincibleConn = nil
local currentHumanoid = nil

local function onPlayerInteract(player)
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 0
            humanoid.JumpPower = 0

            -- Make player invincible
            humanoid.MaxHealth = math.huge
            humanoid.Health = math.huge

            -- Disconnect previous connection if any
            if invincibleConn then
                invincibleConn:Disconnect()
                invincibleConn = nil
            end

            -- Keep health at max while talking
            invincibleConn = humanoid.HealthChanged:Connect(function()
                if humanoid.Health < humanoid.MaxHealth then
                    humanoid.Health = humanoid.MaxHealth
                end
            end)
            currentHumanoid = humanoid
        end
    end
    DialogueEvent:FireClient(player)
    ProxPrompt.Enabled = false
end

local function EnableProx(player)
    ProxPrompt.Enabled = true
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 16
            humanoid.JumpPower = 50

            -- Restore vulnerability
            if invincibleConn then
                invincibleConn:Disconnect()
                invincibleConn = nil
            end
            humanoid.MaxHealth = 100
            humanoid.Health = 100
            currentHumanoid = nil
        end
    end
end

ProxPrompt.Triggered:Connect(onPlayerInteract)
DialogueEvent.OnServerEvent:Connect(EnableProx)


