-- GUI 
local DialogueGUI = script.Parent.Parent.Parent
local GuiFrame = DialogueGUI["Text Box"]
local TextFrame = script.Parent
local ResponseButton1 = GuiFrame.Response1
local ResponseButton2 = GuiFrame.Response2
local replicatedStorage = game:GetService("ReplicatedStorage")
local EventLog = replicatedStorage.Events.TestDialogue

-- Sounds/Music
local DefaultMusic = DialogueGUI["Sounds/Music"].BackgroundMusic
local DefaultSound = DialogueGUI["Sounds/Music"].TypingSound

-- variables
local Typing = false
local Dialogue = false
local StartMessage = 1 

-- other 
local player = game.Players.LocalPlayer


-- Message and Response table
local Messages = {
	[1] = "Hello World",
	[2] = nil
}

local response1 = {
	[1] = "Place Holder!",
	[2] = nil
}

local response2 = {
	[1] = "Place Holder!",
	[2] = nil
}

-- Messaging/Writing script
local function TextInput(messageIndex)
	local message = Messages[messageIndex]
	local resp1 = response1[messageIndex]
	local resp2 = response2[messageIndex]

	-- If no message or responses, turn off GUI and reset state
	if message == nil or resp1 == nil or resp2 == nil then
		DialogueGUI.Enabled = false
		Typing = false
		Dialogue = false
		StartMessage = 1
		DefaultMusic:Stop()
		return
	end

	DialogueGUI.Enabled = true 
	Dialogue = true 
	Typing = true 

	TextFrame.Text = ""
	ResponseButton1.Text = resp1 or ""
	ResponseButton2.Text = resp2 or ""

	-- Messages being typed out 
	for i, v in message:split("") do
		TextFrame.Text = TextFrame.Text..v
		DefaultSound:Play()
		wait(0.05)
	end
	Typing = false
end

EventLog.OnClientEvent:Connect(function()
	TextInput(StartMessage)
	DefaultMusic:Play()
end)

ResponseButton1.MouseButton1Up:Connect(function()
	if Typing == true then return end
	if Dialogue == false then return end
	StartMessage = StartMessage + 1 
	TextInput(StartMessage)
end)

ResponseButton2.MouseButton1Up:Connect(function()
	if Typing == true then return end
	if Dialogue == false then return end 
	StartMessage = StartMessage + 1 
	TextInput(StartMessage)
end)
